{"version":3,"sources":["./src/_auth/pages/login/login.component.ts","./src/_auth/pages/login/login.component.html","./src/_auth/auth.service.ts","./src/_auth/models/auth-cookie-model.ts","./src/_auth/auth.component.ts","./src/_auth/auth.component.html","./node_modules/ngx-cookie-service/__ivy_ngcc__/fesm2015/ngx-cookie-service.js","./src/_auth/pages/forgot-password/forgot-password.component.ts","./src/_auth/pages/forgot-password/forgot-password.component.html","./src/_auth/auth.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACkB;;;;;;;;ICI/D,uEAAwC;IAAA,2GAAkB;IAAA,uEAA0C;IAAnB,wSAAkB;IAAC,wEAAQ;IAAA,4DAAI;IAAA,4DAAI;;;;IAEvH,0EACE;IAD4B,mVAA6C;IACzE,yEACE;IAAA,2EAAsB;IAAA,gEAAK;IAAA,4DAAQ;IACnC,sEAEF;IAAA,4DAAM;IACN,0EACE;IAAA,4EAAsB;IAAA,mEAAQ;IAAA,4DAAQ;IACtC,uEACF;IAAA,4DAAM;IAEN,0EACE;IAAA,6EAAsD;IAAA,4EAAsB;IAAA,6FAAa;IAAA,4DAAO;IAC9F,wEACA;IAAA,sEAAsC;IACxC,4DAAQ;IACR,4EAA8C;IAAA,yEACuB;IAAA,wFAAa;IAAA,4DAAI;IAAA,4DAAO;IAC/F,4DAAM;IAEN,wEAGF;IAAA,4DAAO;;;IAvBD,uFAAuB;IAgBnB,2DAAuB;IAAvB,uFAAuB;IAKxB,0DAAyB;IAAzB,yFAAyB;;;;IAKhC,sEACE;IAAA,4EAIF;IAHS,sTAAkB;IADzB,4DAIF;IAAA,4DAAM;;;IAFG,0DAAyB;IAAzB,yFAAyB;;ADrB7B,MAAM,cAAc;IAIzB,YACU,QAAkB,EACT,WAAwB,EACjC,EAAe;QAFf,aAAQ,GAAR,QAAQ,CAAU;QACT,gBAAW,GAAX,WAAW,CAAa;QACjC,OAAE,GAAF,EAAE,CAAa;QALzB,iBAAY,GAAG,KAAK,CAAC;IAMrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IAClC,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1F,QAAQ,EAAE,CAAC,KAAK,CAAC;SAClB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAEzB,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAEzD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS,CACzD,GAAG,CAAC,EAAE;QACN,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAC1B,CAAC,EACD,GAAG,EAAE;YACH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAE1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;;4EAzDU,cAAc;8FAAd,cAAc;QCf3B,yEACE;QAAA,qEACE;QAAA,iFAAW;QAAA,yEAAQ;QAAA,oEAAS;QAAA,4DAAS;QACvC,4DAAK;QAEJ,sGAAoH;;QACvH,4DAAM;QACN,6GAuBO;;QAEP,sMAOc;;;QAlCP,0DAAqB;QAArB,8IAAqB;QAEiD,0DAA0B;QAA1B,+IAA0B;;6FDQ1F,cAAc;cAT1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE;oBACT,yCAAyC;oBACzC,qBAAqB;oBACrB,sBAAsB;oBACtB,wBAAwB;iBAAC;aAC5B;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAED;AACS;AACU;;;;AAG3D,MAAM,eAAe,GAAG,OAAO,CAAC;AAMzB,MAAM,WAAW;IAGtB,YACU,UAAsB,EACtB,aAA4B;QAD5B,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAJ9B,aAAQ,GAAG,IAAI,oDAAe,CAAkB,IAAI,CAAC,CAAC;QAM5D,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,KAAa,EAAE,QAAgB,EAAE,WAAoB,KAAK;QAC9D,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,QAAQ,EAAE,QAAQ;SAC1B,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,IAAI,CACxD,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CACzC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAE3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEO,kBAAkB,CAAC,GAAQ;QACjC,MAAM,EACJ,MAAM,EACN,MAAM,EACN,MAAM,EACN,QAAQ,EACR,KAAK,EACL,YAAY,EACZ,UAAU,EACX,GAAG,GAAG,CAAC;QAER,MAAM,cAAc,GAAG,IAAI,yEAAe,CACxC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAClE,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,UAAU,CAAC,CAAC;IACtF,CAAC;IAEO,qBAAqB;QAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAE5D,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;SAC7C;IACH,CAAC;;sEAtDU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHV,MAAM;6FAGP,WAAW;cAJvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAO,MAAM,eAAe;IAU1B,YACE,KAAa,EACb,SAAiB,EACjB,UAAkB,EAClB,QAAgB,EAChB,UAAkB,EAClB,KAAa,EACb,SAAe;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;CACF;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAkD;;;AAW3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCX1B,yEACE;QAAA,oEAAyC;QACzC,yEAEE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAA+B;QACjC,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FDHO,aAAa;cATzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE;oBACT,mCAAmC;oBACnC,iBAAiB;oBACjB,uBAAuB;iBACxB;aACF;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAA8G;AAChD;;AAE9D;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yEAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAuD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE,UAAU;AAC9D,oDAAoD,kCAAkC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,yDAAW,GAAG;AAClJ,sBAAsB,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,yDAAW,GAAG,EAAE,4CAA4C;AACzM;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,4DAAc,gBAAgB,OAAO,oDAAM,SAAS,yDAAW,IAAI;AAC/E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,4DAAqB;AAC/C,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;AAEyB;;AAEzB,8C;;;;;;;;;;;;ACvLA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAY3C,MAAM,uBAAuB;IAElC,YACU,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IACxB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;8FAXU,uBAAuB;uGAAvB,uBAAuB;QCZpC,yEACE;QAAA,qEAAI;QAAA,+FAAgB;QAAA,4DAAK;QAE3B,4DAAM;QACN,0EACE;QAAA,yEACE;QAAA,2EAAsB;QAAA,yFAAe;QAAA,4DAAQ;QAC7C,sEACF;QAAA,4DAAM;QAEN,yEACE;QAAA,2EAAsD;QAAA,2EAAsB;QAAA,kKAA0C;QAAA,4DAAO;QAC3H,uEACA;QAAA,qEAAsC;QACxC,4DAAQ;QACV,4DAAM;QAEN,wEAEA;QAAA,yEAA+D;QAAnB,2IAAS,YAAQ,IAAC;QAAC,yEAAQ;QAAA,4DAAI;QAE7E,4DAAO;;6FDTM,uBAAuB;cATnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE;oBACT,yCAAyC;oBACzC,qBAAqB;oBACrB,sBAAsB;oBACtB,kCAAkC;iBAAC;aACtC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AACgB;AAC6B;AACrC;AACN;AACI;AACF;;;AAEjD,MAAM,WAAW,GAAW;IAC1B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;QACxB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,2EAAc;aAC1B;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,wGAAuB;aACnC;SACF;KACF;CACF,CAAC;AAaK,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBAJV;QACT,gEAAa;KACd,YAPQ;YACP,4DAAY;YACZ,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC;SACnC;mIAKU,UAAU,mBAVN,2EAAc,EAAE,wGAAuB,EAAE,6DAAa,aAEnE,4DAAY;QACZ,kEAAmB;6FAOV,UAAU;cAXtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2EAAc,EAAE,wGAAuB,EAAE,6DAAa,CAAC;gBACtE,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC;iBACnC;gBACD,SAAS,EAAE;oBACT,gEAAa;iBACd;aACF","file":"_auth-auth-module.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../../auth.service\";\nimport {Location} from \"@angular/common\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: [\n    '../../../assets/fonts/icomoon/style.css',\n    '../../bootstrap.css',\n    '../../form-style.css',\n    './login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  isRequesting = false;\n\n  constructor(\n    private location: Location,\n    private readonly authService: AuthService,\n    private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.initLoginForm();\n  }\n\n  get isAuth$(): Observable<boolean> {\n    return this.authService.isAuth$;\n  }\n\n  private initLoginForm(): void {\n    this.loginForm = this.fb.group({\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(254)]],\n      password: [null, [Validators.required, Validators.minLength(8), Validators.maxLength(30)]],\n      remember: [false]\n    });\n  }\n\n  submitLogin(): void {\n    this.isRequesting = true;\n    this.loginForm.disable();\n\n    const {email, password, remember} = this.loginForm.value;\n\n    this.authService.login(email, password, remember).subscribe(\n      res => {\n      },\n      err => {\n        this.isRequesting = false;\n        this.loginForm.enable();\n      },\n      () => {\n        this.isRequesting = false;\n        this.loginForm.enable();\n      }\n    );\n  }\n\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  logout(): void {\n    this.isRequesting = true;\n\n    this.authService.logout();\n\n    this.isRequesting = false;\n  }\n}\n","<div class=\"text-center mb-5\">\n  <h3>\n    Phòng khám <strong>Bs. Quang</strong>\n  </h3>\n\n   <p *ngIf=\"isAuth$ | async\" class=\"mb-4\">Bạn đã đăng nhập, <a href=\"javascript:;\" (click)=\"goBack()\">quay lại</a></p>\n</div>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"loginForm.valid && submitLogin()\" *ngIf=\"!(isAuth$ | async); else logOutForm\">\n  <div class=\"form-group first\">\n    <label for=\"username\">Email</label>\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"Vd: your_email@gmail.com\"\n           id=\"username\">\n  </div>\n  <div class=\"form-group last mb-3\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Mật khẩu của bạn\" id=\"password\">\n  </div>\n\n  <div class=\"d-sm-flex mb-5 align-items-center\">\n    <label class=\"control control--checkbox mb-3 mb-sm-0\"><span class=\"caption\">Giữ đăng nhập</span>\n      <input type=\"checkbox\" formControlName=\"remember\"/>\n      <div class=\"control__indicator\"></div>\n    </label>\n    <span [hidden]=\"isRequesting\" class=\"ml-auto\"><a routerLink=\"../forgot-password\"\n                                                     class=\"forgot-pass\">Quên mật khẩu</a></span>\n  </div>\n\n  <input type=\"submit\"\n         [disabled]=\"isRequesting\"\n         [value]=\"isRequesting ? 'Vui lòng đợi ...' : 'Đăng nhập'\" class=\"btn btn-block btn-primary\">\n</form>\n\n<ng-template #logOutForm>\n  <div>\n    <input type=\"submit\"\n           (click)=\"logout()\"\n           [disabled]=\"isRequesting\"\n           [value]=\"isRequesting ? 'Đang đăng xuất ..' : 'Đăng xuất'\" class=\"btn btn-block btn-primary\">\n  </div>\n</ng-template>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {map, tap} from \"rxjs/operators\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {AuthCookieModel} from \"./models/auth-cookie-model\";\nimport {CookieService} from \"ngx-cookie-service\";\n\nconst AUTH_COOKIE_KEY = '_auth';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  private authData = new BehaviorSubject<AuthCookieModel>(null);\n\n  constructor(\n    private httpClient: HttpClient,\n    private cookieService: CookieService\n  ) {\n    this.getAuthDataFromCookie();\n  }\n\n  get isAuth$(): Observable<boolean> {\n    return this.authData.pipe(map(d => !!d));\n  }\n\n  login(email: string, password: string, remember: boolean = false): Observable<any> {\n    const body = {\n      email, password, remember\n    };\n    return this.httpClient.post(`/api/_auth/login`, body).pipe(\n      tap(res => this.handleLoginSuccess(res))\n    );\n  }\n\n  logout(): void {\n    this.cookieService.delete(AUTH_COOKIE_KEY);\n\n    this.authData.next(null);\n  }\n\n  private handleLoginSuccess(res: any): void {\n    const {\n      f_name,\n      l_name,\n      m_name,\n      pre_name,\n      email,\n      access_token,\n      expires_at\n    } = res;\n\n    const authCookieData = new AuthCookieModel(\n      email, f_name, m_name, l_name, pre_name, access_token, expires_at\n    );\n\n    this.authData.next(authCookieData);\n    this.cookieService.set(AUTH_COOKIE_KEY, JSON.stringify(authCookieData), expires_at);\n  }\n\n  private getAuthDataFromCookie(): void {\n    const authDataStr = this.cookieService.get(AUTH_COOKIE_KEY);\n\n    if (authDataStr) {\n      this.authData.next(JSON.parse(authDataStr));\n    }\n  }\n}\n","export class AuthCookieModel {\r\n  private email: string;\r\n  private firstName: string;\r\n  private middleName: string;\r\n  private lastName: string;\r\n  private prefixName: string;\r\n  private token: string;\r\n  private expiresAt: Date;\r\n\r\n\r\n  constructor(\r\n    email: string,\r\n    firstName: string,\r\n    middleName: string,\r\n    lastName: string,\r\n    prefixName: string,\r\n    token: string,\r\n    expiresAt: Date) {\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.middleName = middleName;\r\n    this.lastName = lastName;\r\n    this.prefixName = prefixName;\r\n    this.token = token;\r\n    this.expiresAt = expiresAt;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: [\n    '../assets/fonts/icomoon/style.css',\n    './bootstrap.css',\n    './auth.component.scss'\n  ]\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"half\">\n  <div class=\"bg order-1 order-md-2\"></div>\n  <div class=\"contents order-2 order-md-1\">\n\n    <div class=\"container\">\n      <div class=\"row align-items-center justify-content-center\">\n        <div class=\"col-md-6\">\n          <div class=\"form-block\">\n            <router-outlet></router-outlet>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, InjectionToken } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\n// This service is based on the `ng2-cookies` package which sadly is not a service and does\nimport * as ɵngcc0 from '@angular/core';\nclass CookieService {\n    constructor(\n    // The type `Document` may not be used here. Although a fix is on its way,\n    // we will go with `any` for now to support Angular 2.4.x projects.\n    // Issue: https://github.com/angular/angular/issues/12631\n    // Fix: https://github.com/angular/angular/pull/14894\n    document, \n    // Get the `PLATFORM_ID` so we can check if we're in a browser.\n    platformId) {\n        this.document = document;\n        this.platformId = platformId;\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * @param name Cookie name\n     * @returns boolean - whether cookie with specified name exists\n     */\n    check(name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        const regExp = this.getCookieRegExp(name);\n        const exists = regExp.test(this.document.cookie);\n        return exists;\n    }\n    /**\n     * @param name Cookie name\n     * @returns property value\n     */\n    get(name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            const regExp = this.getCookieRegExp(name);\n            const result = regExp.exec(this.document.cookie);\n            return this.safeDecodeURIComponent(result[1]);\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * @returns all the cookies in json\n     */\n    getAll() {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        const cookies = {};\n        const document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            document.cookie.split(';').forEach((currentCookie) => {\n                const [cookieName, cookieValue] = currentCookie.split('=');\n                cookies[this.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = this.safeDecodeURIComponent(cookieValue);\n            });\n        }\n        return cookies;\n    }\n    set(name, value, expiresOrOptions, path, domain, secure, sameSite) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        if (typeof expiresOrOptions === 'number' || expiresOrOptions instanceof Date || path || domain || secure || sameSite) {\n            const optionsBody = {\n                expires: expiresOrOptions,\n                path,\n                domain,\n                secure,\n                sameSite: sameSite ? sameSite : 'Lax',\n            };\n            this.set(name, value, optionsBody);\n            return;\n        }\n        let cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        const options = expiresOrOptions ? expiresOrOptions : {};\n        if (options.expires) {\n            if (typeof options.expires === 'number') {\n                const dateExpires = new Date(new Date().getTime() + options.expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + options.expires.toUTCString() + ';';\n            }\n        }\n        if (options.path) {\n            cookieString += 'path=' + options.path + ';';\n        }\n        if (options.domain) {\n            cookieString += 'domain=' + options.domain + ';';\n        }\n        if (options.secure === false && options.sameSite === 'None') {\n            options.secure = true;\n            console.warn(`[ngx-cookie-service] Cookie ${name} was forced with secure flag because sameSite=None.` +\n                `More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`);\n        }\n        if (options.secure) {\n            cookieString += 'secure;';\n        }\n        if (!options.sameSite) {\n            options.sameSite = 'Lax';\n        }\n        cookieString += 'sameSite=' + options.sameSite + ';';\n        this.document.cookie = cookieString;\n    }\n    /**\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    delete(name, path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const expiresDate = new Date('Thu, 01 Jan 1970 00:00:01 GMT');\n        this.set(name, '', { expires: expiresDate, path, domain, secure, sameSite });\n    }\n    /**\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    deleteAll(path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const cookies = this.getAll();\n        for (const cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain, secure, sameSite);\n            }\n        }\n    }\n    /**\n     * @param name Cookie name\n     * @returns property RegExp\n     */\n    getCookieRegExp(name) {\n        const escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/gi, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    }\n    safeDecodeURIComponent(encodedURIComponent) {\n        try {\n            return decodeURIComponent(encodedURIComponent);\n        }\n        catch (_a) {\n            // probably it is not uri encoded. return as is\n            return encodedURIComponent;\n        }\n    }\n}\nCookieService.ɵfac = function CookieService_Factory(t) { return new (t || CookieService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nCookieService.ɵprov = ɵɵdefineInjectable({ factory: function CookieService_Factory() { return new CookieService(ɵɵinject(DOCUMENT), ɵɵinject(PLATFORM_ID)); }, token: CookieService, providedIn: \"root\" });\nCookieService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: InjectionToken, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CookieService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.InjectionToken, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/*\n * Public API Surface of ngx-cookie-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CookieService };\n\n//# sourceMappingURL=ngx-cookie-service.js.map","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: [\n    '../../../assets/fonts/icomoon/style.css',\n    '../../bootstrap.css',\n    '../../form-style.css',\n    './forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<div class=\"text-center mb-5\">\n  <h3>Lấy lại mật khẩu</h3>\n  <!-- <p class=\"mb-4\">Lorem ipsum dolor sit amet elit. Sapiente sit aut eos consectetur adipisicing.</p> -->\n</div>\n<form action=\"#\" method=\"post\">\n  <div class=\"form-group first\">\n    <label for=\"username\">Email đăng nhập</label>\n    <input type=\"text\" class=\"form-control\" placeholder=\"your-email@gmail.com\" id=\"username\">\n  </div>\n\n  <div class=\"d-sm-flex mb-5 align-items-center\">\n    <label class=\"control control--checkbox mb-3 mb-sm-0\"><span class=\"caption\">Xác nhận, email sẽ được gửi về địa chỉ này</span>\n      <input type=\"checkbox\" checked=\"checked\"/>\n      <div class=\"control__indicator\"></div>\n    </label>\n  </div>\n\n  <input type=\"submit\" value=\"Gửi email\" class=\"btn btn-block btn-primary\">\n\n  <a class=\"mt-4 d-block\" href=\"javascript:;\" (click)=\"goBack()\">Quay lại</a>\n\n</form>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './pages/login/login.component';\nimport {ForgotPasswordComponent} from './pages/forgot-password/forgot-password.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {AuthComponent} from './auth.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {CookieService} from \"ngx-cookie-service\";\n\nconst AUTH_ROUTES: Routes = [\n  {\n    path: \"\",\n    component: AuthComponent,\n    children: [\n      {\n        path: \"login\",\n        component: LoginComponent\n      },\n      {\n        path: \"forgot-password\",\n        component: ForgotPasswordComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [LoginComponent, ForgotPasswordComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(AUTH_ROUTES)\n  ],\n  providers: [\n    CookieService\n  ]\n})\nexport class AuthModule {\n}\n"],"sourceRoot":"webpack:///"}